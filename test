#!/bin/bash
set -e

# Update the apt package index
sudo apt-get update

# Install packages to allow apt to use a repository over HTTPS
sudo apt-get install -y ca-certificates curl gnupg mc

# Add Docker's official GPG key
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Set up the Docker repository
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update the apt package index (again)
sudo apt-get update

# Install Docker Engine, containerd, and Docker Compose
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Create docker group if it doesn't exist
if ! getent group docker >/dev/null; then
    sudo groupadd docker
fi

# Add user to the docker group
if ! groups $USER | grep &>/dev/null "\bdocker\b"; then
    sudo usermod -aG docker $USER
    echo "You need to log out and log back in for the group changes to take effect."
fi

# Print Docker version
docker --version

echo "Docker Engine has been successfully installed on your Ubuntu system!"

# Install UFW (Uncomplicated Firewall)
sudo apt-get install -y ufw

# Allow specific ports through the firewall
sudo ufw allow 5011/tcp
sudo ufw allow 22/tcp

# Enable UFW
sudo ufw enable

# Install Git
sudo apt-get install -y git

# Pull the Docker image
docker pull admier/brinxai_nodes-worker:latest

# Clone the repository
git clone https://github.com/admier1/BrinxAI-Worker-Nodes

# Navigate into the cloned repository directory
cd BrinxAI-Worker-Nodes

# Make the install script executable and run it
chmod +x install_ubuntu.sh
./install_ubuntu.sh
